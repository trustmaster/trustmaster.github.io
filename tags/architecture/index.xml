<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>architecture on A system brought to life</title>
    <link>https://blog.kodigy.com/tags/architecture/</link>
    <description>Recent content in architecture on A system brought to life</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© Vladimir Sibirov. Code released under the MIT license.</copyright>
    <lastBuildDate>Sun, 28 Aug 2022 17:30:12 +0200</lastBuildDate><atom:link href="https://blog.kodigy.com/tags/architecture/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The state of Flow-based Programming</title>
      <link>https://blog.kodigy.com/post/state-of-flow-based-programming/</link>
      <pubDate>Sun, 28 Aug 2022 17:30:12 +0200</pubDate>
      
      <guid>https://blog.kodigy.com/post/state-of-flow-based-programming/</guid>
      <description>In memory of J. Paul Morrison. May he rest in peace, and his work continue to live.
I started this article in 2018 as a collection of observations and ideas that I wanted to share with the Flow-based Programming community. It didn&amp;rsquo;t go beyond a quick draft that never got published. During the next 4 years I barely thought about Flow-based Programming. My focus was on figuring out how software is built in large companies.</description>
    </item>
    
    <item>
      <title>SOLID design principles in short poems</title>
      <link>https://blog.kodigy.com/post/solid_principles_in_short_poems/</link>
      <pubDate>Mon, 12 Mar 2018 22:33:45 +0100</pubDate>
      
      <guid>https://blog.kodigy.com/post/solid_principles_in_short_poems/</guid>
      <description>Software Design is hard. It is complicated, it takes years to learn (in a sense that you really know what you are doing and why, compared to just copying and pasting something that you read somewhere) and sometimes it is counter-intuitive.
I started making these notes to better understand SOLID design principles myself while reading the &amp;ldquo;Clean Architecture&amp;rdquo; by Robert C. Martin. The book points to common misunderstandings of these principles, but the explanations given are far from being easily memorable.</description>
    </item>
    
  </channel>
</rss>
